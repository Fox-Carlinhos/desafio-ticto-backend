{
    "info": {
        "_postman_id": "desafio-ticto-backend-api-updated",
        "name": "Desafio Ticto - API Completa (20 Endpoints)",
        "description": "Collection COMPLETA com todos os 20 endpoints incluindo novos endpoints para admin acessar registros de qualquer funcion√°rio e perfil de usu√°rio.\n\n**üìã Endpoints inclu√≠dos:**\n- üîê Authentication (5): login, logout, me, change-password, profile\n- üë®‚Äçüíº Employees (5): index, store, show, update, destroy \n- ‚è∞ Time Records Employee (4): store, index, summary, today\n- üë®‚Äçüíº Time Records Admin (2): admin-index, admin-employee-records\n- üìä Reports (3): time-records, summary, export\n- üë§ Profile (1): get user profile (admin/employee)\n\n**üöÄ Como usar:**\n1. Importe esta collection no Postman\n2. Execute login Admin/Employee \n3. Tokens s√£o salvos automaticamente\n4. Teste todos os endpoints\n\n**üîë Credenciais:**\n- Admin: admin@ticto.com.br / admin123\n- Employee: carlos.santos@ticto.com.br / carlos123",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "variable": [
        {
            "key": "base_url",
            "value": "http://localhost:8000/api",
            "type": "string"
        },
        {
            "key": "auth_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "admin_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "employee_token",
            "value": "",
            "type": "string"
        },
        {
            "key": "test_employee_id",
            "value": "1",
            "type": "string",
            "description": "ID de funcion√°rio para testes"
        }
    ],
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{auth_token}}",
                "type": "string"
            }
        ]
    },
    "item": [
        {
            "name": "üîê Authentication (6 endpoints)",
            "description": "Sistema de autentica√ß√£o completo com Sanctum e perfil de usu√°rio",
            "item": [
                {
                    "name": "1. Login - Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success && response.data.access_token) {",
                                    "        pm.environment.set('admin_token', response.data.access_token);",
                                    "        pm.environment.set('auth_token', response.data.access_token);",
                                    "        pm.collectionVariables.set('admin_token', response.data.access_token);",
                                    "        pm.collectionVariables.set('auth_token', response.data.access_token);",
                                    "        console.log('‚úÖ Admin token saved:', response.data.access_token);",
                                    "        pm.test('User is admin', function () {",
                                    "            pm.expect(response.data.user.role).to.eql('admin');",
                                    "        });",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"admin@ticto.com.br\",\n    \"password\": \"admin123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/login",
                            "host": ["{{base_url}}"],
                            "path": ["login"]
                        }
                    }
                },
                {
                    "name": "2. Login - Employee",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success && response.data.access_token) {",
                                    "        pm.environment.set('employee_token', response.data.access_token);",
                                    "        pm.environment.set('auth_token', response.data.access_token);",
                                    "        pm.collectionVariables.set('employee_token', response.data.access_token);",
                                    "        pm.collectionVariables.set('auth_token', response.data.access_token);",
                                    "        console.log('‚úÖ Employee token saved:', response.data.access_token);",
                                    "        pm.test('User is employee', function () {",
                                    "            pm.expect(response.data.user.role).to.eql('employee');",
                                    "        });",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"email\": \"carlos.santos@ticto.com.br\",\n    \"password\": \"carlos123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/login",
                            "host": ["{{base_url}}"],
                            "path": ["login"]
                        }
                    }
                },
                {
                    "name": "3. Get User Info (/me)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/me",
                            "host": ["{{base_url}}"],
                            "path": ["me"]
                        }
                    }
                },
                {
                    "name": "4. Change Password",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"current_password\": \"carlos123\",\n    \"new_password\": \"nova_senha123\",\n    \"new_password_confirmation\": \"nova_senha123\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/change-password",
                            "host": ["{{base_url}}"],
                            "path": ["change-password"]
                        }
                    }
                },
                {
                    "name": "5. Logout",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/logout",
                            "host": ["{{base_url}}"],
                            "path": ["logout"]
                        }
                    }
                }
            ]
        },
        {
            "name": "üë®‚Äçüíº Employees - Admin Only (5 endpoints)",
            "description": "CRUD completo de funcion√°rios (apenas administradores)",
            "item": [
                {
                    "name": "1. List Employees (GET /employees)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/employees?search=&manager_id=&page=1",
                            "host": ["{{base_url}}"],
                            "path": ["employees"],
                            "query": [
                                {
                                    "key": "search",
                                    "value": "",
                                    "description": "Busca por nome, CPF, cargo ou email"
                                },
                                {
                                    "key": "manager_id",
                                    "value": "",
                                    "description": "Filtro por gestor"
                                },
                                {
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "2. Create Employee (POST /employees)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"name\": \"Jo√£o Teste Postman\",\n    \"email\": \"joao.postman@teste.com\",\n    \"password\": \"123456\",\n    \"full_name\": \"Jo√£o da Silva Teste Postman\",\n    \"cpf\": \"98765432100\",\n    \"position\": \"Desenvolvedor Backend\",\n    \"birth_date\": \"1992-05-20\",\n    \"cep\": \"13025320\",\n    \"number\": \"500\",\n    \"complement\": \"Sala 201\"\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/employees",
                            "host": ["{{base_url}}"],
                            "path": ["employees"]
                        }
                    }
                },
                {
                    "name": "3. Get Employee Details (GET /employees/{id})",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/employees/{{test_employee_id}}",
                            "host": ["{{base_url}}"],
                            "path": ["employees", "{{test_employee_id}}"]
                        }
                    }
                },
                {
                    "name": "4. Update Employee (PUT /employees/{id})",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n    \"position\": \"Desenvolvedor S√™nior\",\n    \"is_active\": true\n}"
                        },
                        "url": {
                            "raw": "{{base_url}}/employees/{{test_employee_id}}",
                            "host": ["{{base_url}}"],
                            "path": ["employees", "{{test_employee_id}}"]
                        }
                    }
                },
                {
                    "name": "5. Delete Employee (DELETE /employees/{id})",
                    "request": {
                        "method": "DELETE",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/employees/{{test_employee_id}}",
                            "host": ["{{base_url}}"],
                            "path": ["employees", "{{test_employee_id}}"]
                        }
                    }
                }
            ]
        },
        {
            "name": "‚è∞ Time Records - Employee (4 endpoints)",
            "description": "Sistema de ponto eletr√¥nico para funcion√°rios",
            "item": [
                {
                    "name": "1. Record Time Punch (POST /time-records)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/time-records",
                            "host": ["{{base_url}}"],
                            "path": ["time-records"]
                        }
                    }
                },
                {
                    "name": "2. Get My Time Records (GET /time-records)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/time-records?start_date=2025-08-01&end_date=2025-08-23&page=1",
                            "host": ["{{base_url}}"],
                            "path": ["time-records"],
                            "query": [
                                {
                                    "key": "start_date",
                                    "value": "2025-08-01"
                                },
                                {
                                    "key": "end_date",
                                    "value": "2025-08-23"
                                },
                                {
                                    "key": "date",
                                    "value": "2025-08-23",
                                    "disabled": true
                                },
                                {
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "3. Get Summary (GET /time-records/summary)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/time-records/summary",
                            "host": ["{{base_url}}"],
                            "path": ["time-records", "summary"]
                        }
                    }
                },
                {
                    "name": "4. Get Today Status (GET /time-records/today)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/time-records/today",
                            "host": ["{{base_url}}"],
                            "path": ["time-records", "today"]
                        }
                    }
                }
            ]
        },
        {
            "name": "üîç Time Records - Admin Access (2 endpoints) üÜï",
            "description": "Administradores podem acessar registros de qualquer funcion√°rio",
            "item": [
                {
                    "name": "1. All Time Records (GET /admin/time-records)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    console.log('üìä Total records found:', response.pagination?.total || 0);",
                                    "    console.log('üìã Current page:', response.pagination?.current_page || 1);",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/admin/time-records?start_date=2025-08-01&end_date=2025-08-23&page=1",
                            "host": ["{{base_url}}"],
                            "path": ["admin", "time-records"],
                            "query": [
                                {
                                    "key": "start_date",
                                    "value": "2025-08-01",
                                    "description": "Data inicial"
                                },
                                {
                                    "key": "end_date",
                                    "value": "2025-08-23",
                                    "description": "Data final"
                                },
                                {
                                    "key": "employee_id",
                                    "value": "1",
                                    "description": "ID do funcion√°rio espec√≠fico",
                                    "disabled": true
                                },
                                {
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        },
                        "description": "Admins podem visualizar registros de ponto de TODOS os funcion√°rios com filtros por per√≠odo e funcion√°rio espec√≠fico"
                    }
                },
                {
                    "name": "2. Employee Specific Records (GET /admin/time-records/employee/{id})",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/admin/time-records/employee/{{test_employee_id}}?start_date=2025-08-01&end_date=2025-08-23",
                            "host": ["{{base_url}}"],
                            "path": [
                                "admin",
                                "time-records",
                                "employee",
                                "{{test_employee_id}}"
                            ],
                            "query": [
                                {
                                    "key": "start_date",
                                    "value": "2025-08-01",
                                    "description": "Data inicial"
                                },
                                {
                                    "key": "end_date",
                                    "value": "2025-08-23",
                                    "description": "Data final"
                                },
                                {
                                    "key": "page",
                                    "value": "1",
                                    "disabled": true
                                }
                            ]
                        },
                        "description": "Admins podem visualizar registros de um funcion√°rio espec√≠fico com informa√ß√µes detalhadas do funcion√°rio"
                    }
                }
            ]
        },
        {
            "name": "üë§ User Profile (1 endpoint)",
            "description": "Endpoint para obter perfil do usu√°rio autenticado (admin ou employee)",
            "item": [
                {
                    "name": "1. Get User Profile (GET /profile)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    const response = pm.response.json();",
                                    "    if (response.success && response.data) {",
                                    "        console.log('üë§ Profile loaded successfully');",
                                    "        if (response.data.employee) {",
                                    "            console.log('üë®‚Äçüíº Employee profile:', response.data.employee.full_name);",
                                    "            console.log('üìÖ Birth date:', response.data.employee.birth_date);",
                                    "            console.log('üëî Position:', response.data.employee.position);",
                                    "            console.log('üëî Manager:', response.data.employee.manager?.name || 'Sem gestor');",
                                    "            console.log('üè† Address:', response.data.employee.address?.full_address || 'Sem endere√ßo');",
                                    "        } else if (response.data.admin) {",
                                    "            console.log('üë®‚Äçüíº Admin profile:', response.data.admin.role);",
                                    "            console.log('üë• Managed employees:', response.data.admin.managed_employees_count);",
                                    "        }",
                                    "        pm.test('Profile data structure is correct', function () {",
                                    "            pm.expect(response.data).to.have.property('user');",
                                    "            pm.expect(response.data.user).to.have.property('name');",
                                    "            pm.expect(response.data.user).to.have.property('email');",
                                    "        });",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/profile",
                            "host": ["{{base_url}}"],
                            "path": ["profile"]
                        }
                    },
                    "description": "Endpoint para obter perfil do usu√°rio autenticado (admin ou employee). Retorna dados espec√≠ficos baseados no tipo de usu√°rio:\n\n**Para Employees:**\n- Dados pessoais (nome, CPF, cargo, data de nascimento, idade)\n- Informa√ß√µes do gestor\n- Endere√ßo completo\n\n**Para Admins:**\n- Fun√ß√£o administrativa\n- Contagem de funcion√°rios gerenciados\n\n**Acesso:** Ambos os tipos de usu√°rio podem acessar"
                }
            ]
        },
        {
            "name": "üìä Reports - Admin Only (3 endpoints)",
            "description": "Relat√≥rios administrativos com SQL puro",
            "item": [
                {
                    "name": "1. Time Records Report (GET /reports/time-records)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/reports/time-records?start_date=2025-08-01&end_date=2025-08-23&per_page=20&page=1",
                            "host": ["{{base_url}}"],
                            "path": ["reports", "time-records"],
                            "query": [
                                {
                                    "key": "start_date",
                                    "value": "2025-08-01"
                                },
                                {
                                    "key": "end_date",
                                    "value": "2025-08-23"
                                },
                                {
                                    "key": "employee_id",
                                    "value": "1",
                                    "disabled": true
                                },
                                {
                                    "key": "manager_id",
                                    "value": "1",
                                    "disabled": true
                                },
                                {
                                    "key": "per_page",
                                    "value": "20"
                                },
                                {
                                    "key": "page",
                                    "value": "1"
                                }
                            ]
                        }
                    }
                },
                {
                    "name": "2. Dashboard Summary (GET /reports/summary)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/reports/summary",
                            "host": ["{{base_url}}"],
                            "path": ["reports", "summary"]
                        }
                    }
                },
                {
                    "name": "3. Export Data (GET /reports/export)",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Accept",
                                "value": "application/json"
                            },
                            {
                                "key": "Authorization",
                                "value": "Bearer {{auth_token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{base_url}}/reports/export?start_date=2025-08-01&end_date=2025-08-23&format=json",
                            "host": ["{{base_url}}"],
                            "path": ["reports", "export"],
                            "query": [
                                {
                                    "key": "start_date",
                                    "value": "2025-08-01"
                                },
                                {
                                    "key": "end_date",
                                    "value": "2025-08-23"
                                },
                                {
                                    "key": "format",
                                    "value": "json"
                                }
                            ]
                        }
                    }
                }
            ]
        }
    ]
}
